#!/bin/bash

if [ "$(id -u)" != "0" ]; then
	echo "Sorry, you are not root or sudo."
	exit 1
fi

while true 
do 
  # (1) prompt user, and read command line argument 
  read -p "Download and compile newest GCC version(takes very long)? Yes/No [yY/nN] " answer 
 
  # (2) handle the input we were given 
  case $answer in 
   [yY]* )  apt-get -y -qq update
			apt-get -y -qq upgrade
			apt-get -y -qq install unzip flex make automake autoconf pkg-config
			wget https://github.com/gcc-mirror/gcc/archive/gcc-7_2_0-release.zip
			unzip gcc-7_2_0-release.zip
			cd gcc-gcc-7_2_0-release
			./contrib/download_prerequisites
			mkdir build && cd build
			../configure --enable-languages=c,c++ --disable-multilib
			make -j 8
			make install
	  break;;
       
   [nN]* )
      break;; 
       
  * )    echo "Yes/No [yY/nN]";;
     
  esac 
done 

while true 
do 
  # (1) prompt user, and read command line argument 
  read -p "Download and compile newest miner version(takes longer)? Yes/No [yY/nN] " answer 
 
  # (2) handle the input we were given 
  case $answer in 
   [yY]* )  apt-get -y -qq update
			apt-get -y -qq upgrade
			apt-get -y -qq install make git automake autoconf pkg-config libcurl4-openssl-dev libjansson-dev libssl-dev libgmp-dev zlib1g-dev
			git clone https://github.com/fireworm71/veriumMiner
			cd veriumMiner
			./build.sh
			make 
			version="Use: cd veriumMiner -> ./cpuminer [options]"
	  break;;
       
   [nN]* )	apt-get -y -qq update
			apt-get -y -qq upgrade
			apt-get -y -qq install libcurl4-openssl-dev libjansson-dev unzip
			wget https://github.com/fireworm71/veriumMiner/releases/download/v1.4/cpuminer_1.4_linux_x64_O2_GCC7.zip
			unzip cpuminer_1.4_linux_x64_O2_GCC7.zip
			chmod +x cpuminer
			version="Use: ./cpuminer [options]"
      break;; 
       
  * )    echo "Yes/No [yY/nN]";;
     
  esac 
done 

while true 
do 
  # (1) prompt user, and read command line argument 
  read -p "Use Hugepages? Yes/No [yY/nN] " answer 
 
  # (2) handle the input we were given 
  case $answer in 
   [yY]* )  threads=$(grep -c ^processor /proc/cpuinfo)

			set=$(grep avx2 /proc/cpuinfo)
			if [[ -z "$set" ]]
			then
					set=193
			else
					set=386
			fi

			size=$((set*threads))

			echo vm.nr_hugepages=$size >> /etc/sysctl.conf

			sysctl -p
	  break;;
       
   [nN]* )
      break;; 
       
  * )    echo "Yes/No [yY/nN]";;
     
  esac 
done 

echo "Finished installation. $version"
